function [w, v] = train_nn_finetune(initial_nn_params,input_layer_size,hidden_layer_size,num_labels,X,y,lambda,w_S,options)
%train neural network with modified regularisation penalty used in FINETUNE \hat{f}
costFunction = @(p) nnCostFunction_finetune(p, ...
                                   input_layer_size, ...
                                   hidden_layer_size, ...
                                   num_labels, X, y, lambda,w_S);

[nn_params, cost] = fmincg(costFunction, initial_nn_params, options);
w = reshape(nn_params(1:hidden_layer_size * (input_layer_size + 1)), ...
                 hidden_layer_size, (input_layer_size + 1));

v = reshape(nn_params((1 + (hidden_layer_size * (input_layer_size + 1))):end), ...
                 num_labels, (hidden_layer_size + 1));

end